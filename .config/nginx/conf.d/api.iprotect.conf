server {
    listen 80;
    server_name api.dev.iprotect.asia;
    # server_name api.prod.iprotect.asia www.prod.iprotect.asia;

    # Specific location for webhooks
    location /api/webhooks/ {
        proxy_pass http://127.0.0.1:4000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;

    }

    location /api/ {

         set $cors_origin "";

        if ($http_origin ~* (http://localhost:3000|https://api.dev.iprotect.asia)) {
            set $cors_origin $http_origin;
        }

        # CORS configuration
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-api-key' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle preflight (OPTIONS) requests correctly
        if ($request_method = OPTIONS) {
            return 204;
        }

        # Enforce presence of a valid API key header
        if ($http_x_api_key != "iPr0t3ct-4pi-D1NP3m@F") {
            return 401;  # Unauthorized
        }

        # Existing proxy configuration
        proxy_pass http://127.0.0.1:4000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_cache_bypass $http_upgrade;
    }
        # Proxy WebSocket requests to the backend
    location /socket.io/ {
        proxy_pass http://127.0.0.1:4000;  # Backend server for WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # File size
    client_max_body_size 30M;
}